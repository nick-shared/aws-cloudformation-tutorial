{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "mock test template",
    "Resources": {
        "LambdaRepeater": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "exports.handler = async (event) => {",
                                "const response = {",
                                "statusCode: 200,",
                                "body: JSON.stringify('Hello from Lambda!')",
                                "};",
                                "return response;",
                                "};"
                            ]
                        ]
                    }
                },
                "Handler": "index.handler",
                "Runtime": "nodejs8.10",
                "Timeout": "30",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                }
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "lambdalogtocloudwatch",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "MockApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Mock Test",
                "Description": "Set up a mock endpoint"
            }
        },
        "MockResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "MockApi"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "MockApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "mock"
            }
        },
        "MockMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "MockApi"
                },
                "ResourceId": {
                    "Ref": "MockResource"
                },
                "HttpMethod": "GET",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200,
                            "ResponseTemplates": {
                                "application/json": "{\"status\":\"successful\"}"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ]
            }
        }
    }
}